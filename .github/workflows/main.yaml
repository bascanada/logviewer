name: master pipeline , developpment build

on:
  push:
    branches:
      - main
 
permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Login docker
        run: docker login https://ghcr.io -u wquintal -p $GITHUB_ACCESS_TOKEN
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      - name: Set up Go 1.23
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
          check-latest: true
          cache-dependency-path: |
            go.sum
      - name: Go dependencies
        run: go install github.com/boumenot/gocover-cobertura@latest
      - name: Test
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go install github.com/boumenot/gocover-cobertura@latest
          make test/coverage 
      - name: Build for all plateform
        run: make release/all
      - name: Docker build
        run: docker build -t ghcr.io/bascanada/logviewer:latest .
      - name: Docker push
        run: docker push ghcr.io/bascanada/logviewer:latest
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            ./build/*
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '20 80'
